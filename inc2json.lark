

start: statement*

statement: typedef | struct _C_TERM

typedef: "typedef" decl

decl: native _C_TERM
    | custom  _C_TERM

native: nativetypes declname declarrs
custom: customname declname declarrs

customname: NAME

nativetypes: nativetype*

declname: NAME

nativetype: "char" -> char
    | "short" -> short
    | "int" -> int
    | "long" -> long
    | "signed" -> signed
    | "unsigned" -> unsigned

declarrs: declarr*

?declarr: "[" NUMBER "]"

struct: "struct" NAME? "{" decl* "}"

_C_TERM: ";"

%import common.CNAME -> NAME
%import common(INT, NUMBER, WS, SH_COMMENT, CPP_COMMENT, C_COMMENT)

%ignore WS
%ignore SH_COMMENT
%ignore CPP_COMMENT
%ignore C_COMMENT
