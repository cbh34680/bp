

start: statement*

statement: typedef | declare | define

typedef: "typedef" declare


define: "#" "define" NAME expr

?declare: (stdtype | alias | usertype) _C_TERM


?usertype: "struct" usertype_

?usertype_: NAME NAME -> usertyperef
    | tag "{" declares "}" typename declarrs -> usertypedecl

tag: NAME?
declares: declare*
typename: NAME?


alias: NAME NAME declarrs


stdtype: builtins NAME declarrs

builtins: builtin*
!?builtin: "char" | "short" | "int" | "long" | "signed" | "unsigned" | "const" | "void" | "*"


declarrs: declarr*
declarr: "[" expr "]" -> id

// https://lark-parser.readthedocs.io/en/latest/examples/calc.html
expr: sum -> id

?sum: product
    | sum "+" product -> add
    | sum "-" product -> sub

?product: atom
    | product "*" atom -> mul
    | product "/" atom -> div

?atom: NUMBER -> atoi
    | NAME -> var
    | "(" expr ")" -> id



_C_TERM: ";"
PP_COMMENT: /#\s+\d+\s/ ESCAPED_STRING /(\s+\d+)*/


%import common.CNAME -> NAME
%import common(INT, NUMBER, WS, CPP_COMMENT, C_COMMENT, ESCAPED_STRING)

%ignore WS

%ignore PP_COMMENT
%ignore CPP_COMMENT
%ignore C_COMMENT
