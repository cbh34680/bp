

start: statement*

statement: typedef | declare | define

typedef: "typedef" declare


define: "#" "define" NAME NUMBER

declare: (stdtype | alias | usertype) _C_TERM


usertype: "struct" tag "{" declares "}" typename declarrs

tag: NAME?
declares: declare*
typename: NAME?


alias: NAME NAME declarrs


stdtype: builtins NAME declarrs

builtins: builtin*
builtin: "char" -> char
    | "short" -> short
    | "int" -> int
    | "long" -> long
    | "signed" -> signed
    | "unsigned" -> unsigned
    | "const" -> const
    | "void" -> void
    | "*" -> ptr


declarrs: declarr*
declarr: "[" (NUMBER | defval) "]"

defval: NAME


_C_TERM: ";"
PP_COMMENT: /#\s+\d+\s/ ESCAPED_STRING /(\s+\d+)*/


%import common.CNAME -> NAME
%import common(INT, NUMBER, WS, CPP_COMMENT, C_COMMENT, ESCAPED_STRING)

%ignore WS

%ignore PP_COMMENT
%ignore CPP_COMMENT
%ignore C_COMMENT
