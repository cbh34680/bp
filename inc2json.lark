

start: statement*

statement: typedef | declare

typedef: "typedef" declare


declare: (stdtype | alias | usertype) _C_TERM


usertype: "struct" tag "{" declares "}" typename declarrs

tag: NAME?
declares: declare*
typename: NAME?


alias: NAME NAME declarrs


stdtype: builtins NAME declarrs

builtins: builtin*
builtin: "char" -> char
    | "short" -> short
    | "int" -> int
    | "long" -> long
    | "signed" -> signed
    | "unsigned" -> unsigned
    | "const" -> const
    | "*" -> ptr


declarrs: declarr*
declarr: "[" NUMBER "]"


_C_TERM: ";"


%import common.CNAME -> NAME
%import common(INT, NUMBER, WS, SH_COMMENT, CPP_COMMENT, C_COMMENT)

%ignore WS
%ignore SH_COMMENT
%ignore CPP_COMMENT
%ignore C_COMMENT
