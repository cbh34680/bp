# readelf -e -W a64.out
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x4004a0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          15600 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         9
  Size of section headers:           64 (bytes)
  Number of section headers:         30
  Section header string table index: 29

Section Headers:
  [Nr] Name              Type            Address          Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            0000000000000000 000000 000000 00      0   0  0
  [ 1] .interp           PROGBITS        0000000000400238 000238 00001c 00   A  0   0  1
  [ 2] .note.ABI-tag     NOTE            0000000000400254 000254 000020 00   A  0   0  4
  [ 3] .note.gnu.build-id NOTE            0000000000400274 000274 000024 00   A  0   0  4
  [ 4] .gnu.hash         GNU_HASH        0000000000400298 000298 00001c 00   A  5   0  8
  [ 5] .dynsym           DYNSYM          00000000004002b8 0002b8 000090 18   A  6   1  8
  [ 6] .dynstr           STRTAB          0000000000400348 000348 000073 00   A  0   0  1
  [ 7] .gnu.version      VERSYM          00000000004003bc 0003bc 00000c 02   A  5   0  2
  [ 8] .gnu.version_r    VERNEED         00000000004003c8 0003c8 000020 00   A  6   1  8
  [ 9] .rela.dyn         RELA            00000000004003e8 0003e8 000060 18   A  5   0  8
  [10] .rela.plt         RELA            0000000000400448 000448 000018 18  AI  5  22  8
  [11] .init             PROGBITS        0000000000400460 000460 00001b 00  AX  0   0  4
  [12] .plt              PROGBITS        0000000000400480 000480 000020 10  AX  0   0 16
  [13] .text             PROGBITS        00000000004004a0 0004a0 000185 00  AX  0   0 16
  [14] .fini             PROGBITS        0000000000400628 000628 00000d 00  AX  0   0  4
  [15] .rodata           PROGBITS        0000000000400638 000638 00001c 00   A  0   0  8
  [16] .eh_frame_hdr     PROGBITS        0000000000400654 000654 00003c 00   A  0   0  4
  [17] .eh_frame         PROGBITS        0000000000400690 000690 0000e8 00   A  0   0  8
  [18] .init_array       INIT_ARRAY      0000000000600e00 000e00 000008 08  WA  0   0  8
  [19] .fini_array       FINI_ARRAY      0000000000600e08 000e08 000008 08  WA  0   0  8
  [20] .dynamic          DYNAMIC         0000000000600e10 000e10 0001d0 10  WA  6   0  8
  [21] .got              PROGBITS        0000000000600fe0 000fe0 000020 08  WA  0   0  8
  [22] .got.plt          PROGBITS        0000000000601000 001000 000020 08  WA  0   0  8
  [23] .data             PROGBITS        0000000000601020 001020 000004 00  WA  0   0  1
  [24] .bss              NOBITS          0000000000601024 001024 000004 00  WA  0   0  1
  [25] .comment          PROGBITS        0000000000000000 001024 000058 01  MS  0   0  1
  [26] .gnu.build.attributes NOTE            0000000000a01028 00107c 001b90 00      0   0  4
  [27] .symtab           SYMTAB          0000000000000000 002c10 000990 18     28  82  8
  [28] .strtab           STRTAB          0000000000000000 0035a0 000637 00      0   0  1
  [29] .shstrtab         STRTAB          0000000000000000 003bd7 000119 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  l (large), p (processor specific)

Program Headers:
  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align
  PHDR           0x000040 0x0000000000400040 0x0000000000400040 0x0001f8 0x0001f8 R   0x8
  INTERP         0x000238 0x0000000000400238 0x0000000000400238 0x00001c 0x00001c R   0x1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x000000 0x0000000000400000 0x0000000000400000 0x000778 0x000778 R E 0x200000
  LOAD           0x000e00 0x0000000000600e00 0x0000000000600e00 0x000224 0x000228 RW  0x200000
  DYNAMIC        0x000e10 0x0000000000600e10 0x0000000000600e10 0x0001d0 0x0001d0 RW  0x8
  NOTE           0x000254 0x0000000000400254 0x0000000000400254 0x000044 0x000044 R   0x4
  GNU_EH_FRAME   0x000654 0x0000000000400654 0x0000000000400654 0x00003c 0x00003c R   0x4
  GNU_STACK      0x000000 0x0000000000000000 0x0000000000000000 0x000000 0x000000 RW  0x10
  GNU_RELRO      0x000e00 0x0000000000600e00 0x0000000000600e00 0x000200 0x000200 R   0x1

 Section to Segment mapping:
  Segment Sections...
   00
   01     .interp
   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame
   03     .init_array .fini_array .dynamic .got .got.plt .data .bss
   04     .dynamic
   05     .note.ABI-tag .note.gnu.build-id
   06     .eh_frame_hdr
   07
   08     .init_array .fini_array .dynamic .got
